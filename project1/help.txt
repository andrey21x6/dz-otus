
   *** nginx ***

systemctl status nginx

nano /etc/nginx/nginx.conf
nano /usr/share/nginx/html/index.html

# Проверить разрешение в SELinux на обратное проксирование
getsebool httpd_can_network_connect

========================================================================

   *** backend1 ***
   
nano /usr/share/nginx/html/index.php

getsebool httpd_can_network_connect

========================================================================

   *** database ***
   
systemctl status mariadb
systemctl restart mariadb

# Запуск утилиты настройки безопасности mariadb
/usr/bin/mysql_secure_installation

# Включить доступ к MariaDB с любых хостов (root)
mysql -uroot -p
	GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '12345678';
	
mysql -h 127.0.0.1 -uroot -p123456 \
  "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '12345678';" \
  exit



mysql -u root -p123456

show databases;
use mysql;
show tables;

Database changed

CREATE TABLE table1
(
    id INT,
    name VARCHAR(255)
);



CREATE DATABASE project1;
mysql -u root -p123456 project1 < /home/vagrant/project1.sql

mysqldump -u root -p123456 project1 text_entries > /root/project1_2.sql

USE project1;
show tables;

text_entries



---------------------------------------------------------------------------

1.

nano /etc/my.cnf.d/mariadb-server.cnf
	server-id = 1
	log_bin = /var/log/mariadb/mariadb-bin.log

systemctl restart mariadb
systemctl status mariadb

mysql -u root -p123456
GRANT replication slave ON *.* TO "replicatuser"@"192.168.90.15" IDENTIFIED BY "passuser";

SHOW MASTER STATUS \G
	File: mariadb-bin.000001
    Position: 897
	
change master to master_host = "192.168.90.15", master_user = "replicatuser", master_password = "passuser", master_log_file = "mariadb-bin.000001", master_log_pos = 1825;
start slave;
	
2.

nano /etc/my.cnf.d/mariadb-server.cnf
	server-id = 2
	log_bin = /var/log/mariadb/mariadb-bin.log

systemctl restart mariadb
systemctl status mariadb

mysql -u root -p123456
GRANT replication slave ON *.* TO "replicatuser"@"192.168.90.14" IDENTIFIED BY "passuser";

SHOW MASTER STATUS \G
	File: mariadb-bin.000001
    Position: 1825

change master to master_host = "192.168.90.14", master_user = "replicatuser", master_password = "passuser", master_log_file = "mariadb-bin.000001", master_log_pos = 897;
start slave;

-------------------------------------------------------------------------------

mysql -h 127.0.0.1 -u root -p123456 -e 'SHOW MASTER STATUS \G' | grep 'Position:';
mysql -h 127.0.0.1 -u root -p123456 -e 'SHOW MASTER STATUS \G' | grep 'File:';

STR=`mysql -h 127.0.0.1 -u root -p123456 -e 'SHOW MASTER STATUS \G' | grep 'Position';` ; eval $(echo $STR | sed 's:^:V1=":; /Position: / s::";V2=": ;s:$:":') ; echo $V2
STR=`mysql -h 127.0.0.1 -u root -p123456 -e 'SHOW MASTER STATUS \G' | grep 'File';` ; eval $(echo $STR | sed 's:^:V1=":; /File: / s::";V2=": ;s:$:":') ; echo $V2



bind-address=0.0.0.0
server-id = 1
log_bin = /var/log/mariadb/mariadb-bin.log




# Для настройки репликации master-master, логин: replicatuser, пароль: passuser (IP 192.168.90.14 второй БД)
mysql -h 127.0.0.1 -uroot -p123456 <<EOF
GRANT replication slave ON *.* TO "replicatuser"@"192.168.90.15" IDENTIFIED BY "passuser";
change master to master_host = "192.168.90.15", master_user = "replicatuser", master_password = "passuser", master_log_file = "${V4}", master_log_pos = ${V2};
start slave;
EOF

========================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        include /etc/nginx/default.d/*.conf;

        location / {
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}